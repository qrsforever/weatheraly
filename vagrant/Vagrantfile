# -*- mode: ruby -*-
# vi: set ft=ruby :

############### 我的工程模板 ##############

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

# 如果存在对应节点， 创建nfs映射目录
components = ["hadoop", "zookeeper", "hbase", "hive", "pig"]

Vagrant.configure("2") do |config|

    # 启动的虚拟box
    config.vm.box = "hadoop-vm"

    # 启动超时100秒
    config.vm.boot_timeout = 100
    config.vm.box_check_update = false

    # 登录相关
    config.ssh.username = "lidong"
    # 不安全， 不建议使用
    # config.ssh.password = "1"
    # config.ssh.insert_key = true
    config.ssh.private_key_path = "~/.ssh/id_rsa"
    # config.ssh.forward_agent = true

    (1..5).each do |i|
        config.vm.define "node#{i}" do |node|
            # 主机名
            node.vm.hostname = "node#{i}"

            # 修改NAT网卡的mac
            node.vm.base_mac = "080027d507f#{i}"

            # 设置eth0 IP, mac地址
            node.vm.network "public_network", ip: "192.168.1.20#{i}", :bridge => 'eth0', :mac => "08002722a10#{i}"

            # VirtaulBox相关配置
            node.vm.provider "virtualbox" do |v|
                # 设置虚拟机的名称
                v.name = "node#{i}"
                # 设置虚拟机的内存大小
                v.memory = 512
                # 设置虚拟机的CPU个数
                v.cpus = 1
            end

            components.each do |cn|
                if File.directory?("node#{i}/#{cn}")
                    node.vm.provision "shell", inline: <<-SHELL
                    if [[ ! -d nfs/{cn} ]]
                    then
                        mkdir -p nfs/#{cn}
                        chown lidong:lidong nfs/#{cn}
                    fi
                    SHELL
                    node.vm.synced_folder "node#{i}/#{cn}", "/home/lidong/nfs/#{cn}", owner: "lidong", group: "lidong"
                end
            end

            # 远端node执行脚本 (path 方式执行时间上先与inline)
            if File.file?("script.sh")
                config.vm.provision "shell" do |s|
                    s.path = "script.sh"
                    s.args = node.vm.hostname
                end
            end
        end
    end

    if File.directory?("common")
        config.vm.provision "shell", inline: <<-SHELL
            if [[ ! -d nfs/common ]]
                then
                    mkdir -p nfs/common
                    chown lidong:lidong nfs/common
                fi
        SHELL
        config.vm.synced_folder "common", "/home/lidong/nfs/common", owner: "lidong", group: "lidong"
    end
end
